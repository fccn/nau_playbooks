# Playbook that checks the health of the services.
#
# 1. Check databases replication used by the open edx platform:
# - MySQL DB
# - MongoDB
# - Elasticsearch
#
# 2. Run check urls for all the web servers
#
# Ansible playbook extra variables:
# - target_mysql_server - used to check only a subrange of MySQL databases for its health
# - target_mongo_server - used to change the default Mongo database instance where to check the health of the cluster
#
# Example:
#   ansible-playbook -i nau-data/envs/development/hosts.ini healthcheck.yml
#
---
- name: Run Health check
  hosts: all
  become: True
  gather_facts: True
  serial: "{{ serial_number | default(1) }}" # default check in parallel
  tasks:
    - import_tasks: tasks/healthcheck.yml

    - import_role:
        name: nau_check_urls

    - name: Check routing if can connect to 1st load balancer virtual IP
      shell: |
        curl -4 -v --resolve {{ EDXAPP_LMS_BASE }}:443:{{ hostvars[groups['balancer_servers'][0]].balancer_virtual_ipv4_1 }} https://{{ EDXAPP_LMS_BASE }}
      # skip warning of using curl instead of get_url, because we need to use the --resolve option
      args:
        warn: False
      # Executing a curl doesn't change anything, so we have better output
      changed_when: False
      when: hostvars[groups['balancer_servers'][0]].balancer_virtual_ipv4_1 is defined

    - name: Check routing if can connect to 2nd load balancer virtual IP
      shell: |
        curl -4 -v --resolve {{ EDXAPP_LMS_BASE }}:443:{{ hostvars[groups['balancer_servers'][0]].balancer_virtual_ipv4_2 }} https://{{ EDXAPP_LMS_BASE }}
      # skip warning of using curl instead of get_url, because we need to use the --resolve option
      args:
        warn: False
      # Executing a curl doesn't change anything, so we have better output
      changed_when: False
      when: hostvars[groups['balancer_servers'][0]].balancer_virtual_ipv4_2 is defined
