---

openedx_app_image: nauedu/openedx:nau-nutmeg.master

# By default we deploy both lms and studio application
openedx_lms_deploy: true
openedx_cms_deploy: true

# Number of uwsgi workers for each application.
# The uwsgi workers are the number of OS processes that real handle http requests.
openedx_lms_uwsgi_workers: 2
openedx_cms_uwsgi_workers: 2

openedx_app_uwsgi_stats_http_port: 1717
openedx_app_command: uwsgi --ini uwsgi.ini
openedx_lms_command: "{{ openedx_app_command }} {{ openedx_lms_command_extra }}"
openedx_cms_command: "{{ openedx_app_command }} {{ openedx_cms_command_extra }}"
openedx_app_command_extra: ""
openedx_lms_command_extra: "{{ openedx_app_command_extra }}"
openedx_cms_command_extra: "{{ openedx_app_command_extra }}"

openedx_lms_memory_maximum_megabytes: "{{ openedx_lms_uwsgi_workers * ( 500 if openedx_lms_uwsgi_workers > 2 else 750 ) }}"
openedx_lms_memory_reservation_megabytes: "{{ openedx_lms_uwsgi_workers * 500 }}"

openedx_cms_memory_maximum_megabytes: "{{ openedx_cms_uwsgi_workers * ( 500 if openedx_cms_uwsgi_workers > 2 else 750 ) }}"
openedx_cms_memory_reservation_megabytes: "{{ openedx_cms_uwsgi_workers * 500 }}"

openedx_app_docker_deploy_templates:
  - src_data:  "{{ openedx_lms_env_file | to_nice_yaml(indent=2, width=1337) }}" # default_flow_style=False didn't work
    dest: "{{ openedx_docker_deploy_base_folder }}/app/lms.env.yml"
    service: edxapp
    config_name: lms_env
    docker_target: /openedx/config/lms.env.yml
  - src_data:  "{{ openedx_cms_env_file | to_nice_yaml(indent=2, width=1337) }}" # default_flow_style=False didn't work
    dest: "{{ openedx_docker_deploy_base_folder }}/app/studio.env.yml"
    service: edxapp
    config_name: studio_env
    docker_target: /openedx/config/cms.env.yml
  - src:  templates/app/uwsgi.ini
    dest: "{{ openedx_docker_deploy_base_folder }}/app/uwsgi.ini"
    service: edxapp
    config_name: app_wsgi_ini
    docker_target: /openedx/edx-platform/uwsgi.ini
  - src:  templates/app/lms/wsgi.py
    dest: "{{ openedx_docker_deploy_base_folder }}/app/lms/wsgi.py"
    service: edxapp
    config_name: lms_wsgi_py
    docker_target: /openedx/edx-platform/lms/wsgi.py
  - src:  templates/app/cms/wsgi.py
    dest: "{{ openedx_docker_deploy_base_folder }}/app/cms/wsgi.py"
    service: edxapp
    config_name: cms_wsgi_py
    docker_target: /openedx/edx-platform/cms/wsgi.py

openedx_app_docker_deploy_files:
  - src: files/app/nau_production.py
    dest: "{{ openedx_docker_deploy_base_folder }}/app/lms/envs/nau_production.py"
    service: edxapp
    config_name: lms_envs_nau_production
    docker_target: /openedx/edx-platform/lms/envs/nau_production.py
  - src: files/app/nau_production.py
    dest: "{{ openedx_docker_deploy_base_folder }}/app/cms/envs/nau_production.py"
    service: edxapp
    config_name: cms_envs_nau_production
    docker_target: /openedx/edx-platform/cms/envs/nau_production.py

OPENEDX_JWT_COMMON_ISSUER: "https://{{ OPENEDX_LMS_HOST }}/oauth2"

# app smtp configuration, that forwards emails to smtp container that relays emails.
OPENEDX_SMTP_HOST: smtp
OPENEDX_SMTP_PORT: 8025
OPENEDX_SMTP_HOST_USER: ""
OPENEDX_SMTP_HOST_PASSWORD: ""
OPENEDX_SMTP_USE_TLS: false
OPENEDX_SMTP_USE_SSL: false

openedx_smtp_external_host: "{{ POSTFIX_QUEUE_EXTERNAL_SMTP_HOST }}"
openedx_smtp_external_username: ""
openedx_smtp_external_password: "" # leave this blank to disable authentication

# Redis
# use load balancer to use the right redis instance based on the availability of the 1st cluster
# or if not available use the 2nd.
OPENEDX_REDIS_HOST: "{{ openedx_docker_deploy_cache_redis_host }}"
OPENEDX_REDIS_PRIMARY_PORT: "{{ openedx_docker_deploy_cache_redis_port }}"
# OPENEDX_REDIS_REPLICAS_PORT: 6380
OPENEDX_REDIS_USERNAME: ""
OPENEDX_REDIS_PASSWORD: ""

OPENEDX_CELERY_REDIS_DB: 0
OPENEDX_CACHE_REDIS_DB: 1

OPENEDX_CELERY_BROKER_TRANSPORT: "redis"
# Use 2nd redis directly, this won't have high availability
OPENEDX_CELERY_BROKER_HOSTNAME: "{{ openedx_docker_deploy_celery_redis_host }}:{{ openedx_docker_deploy_celery_redis_port }}"
OPENEDX_CELERY_BROKER_VHOST: "{{ OPENEDX_CELERY_REDIS_DB }}"
OPENEDX_CELERY_BROKER_USER: "{{ OPENEDX_REDIS_USERNAME }}"
OPENEDX_CELERY_BROKER_PASSWORD: "{{ OPENEDX_REDIS_PASSWORD }}"

OPENEDX_LANGUAGE_CODE: pt

###################################
# Yaml reusable blocks
###################################

# Generic cache configuration so it can be reused bellow on both lms and studio
openedx_generic_cache_config: &default_openedx_generic_cache_config
  BACKEND: "django_redis.cache.RedisCache"
  LOCATION: "redis://{% if OPENEDX_REDIS_USERNAME and OPENEDX_REDIS_PASSWORD %}{{ OPENEDX_REDIS_USERNAME }}:{{ OPENEDX_REDIS_PASSWORD }}@{% endif %}{{ OPENEDX_REDIS_HOST }}:{{ OPENEDX_REDIS_PRIMARY_PORT }}/{{ OPENEDX_CACHE_REDIS_DB }}"
  # Use the `django-sentinel` package to connect to Redis.
  # This allows to use the Redis sentinel instance that sends writes to the Redis master and
  # reads to a random Redis container instance.
  # https://github.com/fccn/nau-tutor-configs/commit/bfd251b6b3cd7440c22aa47fbda536eeddec6a8e
  # If the `django-sentinel` package isn't available use this configuration instead:
  # LOCATION: mymaster/redis-sentinel:26379,redis-sentinel:26379/0
  # OPTIONS:
  #   SOCKET_TIMEOUT: 3200 # seconds
  #   SOCKET_CONNECT_TIMEOUT: 30 # seconds
    # CLIENT_CLASS: "django_sentinel.SentinelClient"
    # Ignore exceptions when redis is down, this is default behavior in the memcached backend.
    # In reality can't be included because if redis is down, the LMS shows a message to the user
    # that is receiving too much requests.
    # IGNORE_EXCEPTIONS: true

edxapp_generic_contentstore_config: &edxapp_generic_default_contentstore
  ENGINE:  'xmodule.contentstore.mongo.MongoContentStore'
  #
  # connection strings are duplicated temporarily for
  # backward compatibility
  #
  OPTIONS:
    db: "{{ EDXAPP_MONGO_DB_NAME }}"
    host: "{{ EDXAPP_MONGO_HOSTS }}"
    password: "{{ EDXAPP_MONGO_PASSWORD }}"
    port: "{{ EDXAPP_MONGO_PORT }}"
    user: "{{ EDXAPP_MONGO_USER }}"
    ssl: "{{ EDXAPP_MONGO_USE_SSL }}"
    auth_source: "{{ EDXAPP_MONGO_AUTH_DB }}"

edxapp_generic_doc_store_config: &edxapp_generic_default_docstore
  db: "{{ EDXAPP_MONGO_DB_NAME }}"
  host: "{{ EDXAPP_MONGO_HOSTS }}"
  replicaSet: "{{ EDXAPP_MONGO_REPLICA_SET }}"
  password: "{{ EDXAPP_MONGO_PASSWORD }}"
  port: "{{ EDXAPP_MONGO_PORT }}"
  user: "{{ EDXAPP_MONGO_USER }}"
  collection:  'modulestore'
  ssl: "{{ EDXAPP_MONGO_USE_SSL }}"
  # https://api.mongodb.com/python/2.9.1/api/pymongo/mongo_client.html#module-pymongo.mongo_client
  socketTimeoutMS: 3000 # default is never timeout while the connection is open, this means it needs to explicitly close raising pymongo.errors.NetworkTimeout
  connectTimeoutMS: 2000 # default is 20000, I believe raises pymongo.errors.ConnectionFailure
  # Not setting waitQueueTimeoutMS and waitQueueMultiple since pymongo defaults to nobody being allowed to wait
  authsource: "{{ EDXAPP_MONGO_AUTH_DB }}"

edxapp_course_data_dir: /openedx/data/modulestore

#########################
# Old EDXAPP_ variables #
#########################
# that are shared between different environments
COMMON_ENVIRONMENT: 'default_env'
EDXAPP_ORA2_FILE_PREFIX: '{{ COMMON_ENVIRONMENT }}-{{ COMMON_DEPLOYMENT }}/ora2'
EDXAPP_RETIREMENT_STATES:
  - "PENDING"
  - "ERRORED"
  - "ABORTED"
  - "COMPLETE"

EDXAPP_VIDEO_IMAGE_SETTINGS:
    DIRECTORY_PREFIX: video-images/
    STORAGE_CLASS: storages.backends.s3boto3.S3Boto3Storage
    STORAGE_KWARGS:
      bucket: "{{ EDXAPP_AWS_STORAGE_BUCKET_NAME }}"
      custom_domain: !!null
      default_acl: public-read
      endpoint_url: https://{{ nau_ceph_host }}
    VIDEO_IMAGE_MAX_BYTES: 2097152 # 2MB
    VIDEO_IMAGE_MIN_BYTES: 2048    # 2KB

EDXAPP_LMS_DRAFT_DOC_STORE_CONFIG:
  <<: *edxapp_generic_default_docstore
  read_preference: PRIMARY

EDXAPP_LMS_SPLIT_DOC_STORE_CONFIG:
  <<: *edxapp_generic_default_docstore
  read_preference: SECONDARY_PREFERRED

EDXAPP_CMS_DOC_STORE_CONFIG:
  <<: *edxapp_generic_default_docstore
  read_preference: PRIMARY

EDXAPP_MONGO_AUTH_DB: ''

EDXAPP_PLATFORM_DESCRIPTION: NAU Sempre a Aprender

EDXAPP_EDXNOTES_INTERNAL_API: "http://notes:{{ openedx_notes_port }}/api/v1"

EDXAPP_LMS_ISSUER: "{{ COMMON_JWT_ISSUER }}"
COMMON_JWT_ISSUER: '{{ COMMON_OAUTH_URL_ROOT }}'
COMMON_OAUTH_BASE_URL: '{{ COMMON_LMS_BASE_URL }}'
COMMON_OAUTH_PUBLIC_URL_ROOT: '{{ COMMON_OAUTH_BASE_URL }}/oauth2'
COMMON_OAUTH_URL_ROOT: '{{ COMMON_OAUTH_PUBLIC_URL_ROOT }}'
COMMON_OAUTH_LOGOUT_URL: '{{ COMMON_OAUTH_BASE_URL }}/logout'
EDXAPP_JWT_PUBLIC_SIGNING_JWK_SET: "{{ COMMON_JWT_PUBLIC_SIGNING_JWK_SET|string }}"
EDXAPP_JWT_AUTH_COOKIE_HEADER_PAYLOAD: '{{ COMMON_JWT_AUTH_COOKIE_HEADER_PAYLOAD }}'
COMMON_JWT_AUTH_COOKIE_HEADER_PAYLOAD: 'edx-jwt-cookie-header-payload'
EDXAPP_JWT_AUTH_COOKIE_SIGNATURE: '{{ COMMON_JWT_AUTH_COOKIE_SIGNATURE }}'
COMMON_JWT_AUTH_COOKIE_SIGNATURE: 'edx-jwt-cookie-signature'
EDXAPP_JWT_AUTH_REFRESH_COOKIE: '{{ COMMON_JWT_AUTH_REFRESH_COOKIE }}'
COMMON_JWT_AUTH_REFRESH_COOKIE: 'edx-jwt-refresh-cookie'

# Change session cookie domain
EDXAPP_SESSION_COOKIE_DOMAIN: ""
EDXAPP_AWS_S3_CUSTOM_DOMAIN: ""

EDXAPP_CELERY_TIMEZONE: UTC
EDXAPP_TIME_ZONE: UTC

###########################################
# bridge from OPENEDX to EDXAPP variables #
###########################################
OPENEDX_AWS_ACCESS_KEY: "{{ EDXAPP_AWS_ACCESS_KEY_ID }}"
OPENEDX_AWS_SECRET_ACCESS_KEY: "{{ EDXAPP_AWS_SECRET_ACCESS_KEY }}"

OPENEDX_LMS_HOST: "{{ EDXAPP_LMS_BASE }}"
OPENEDX_CMS_HOST: "{{ EDXAPP_CMS_BASE }}"
OPENEDX_SITE_NAME: "{{ EDXAPP_SITE_NAME }}"

OPENEDX_CUSTOM_S3_HOST: "{{ nau_ceph_host }}"

OPENEDX_COURSE_CATALOG_API_URL: "{{ EDXAPP_COURSE_CATALOG_API_URL }}"
OPENEDX_CROSS_DOMAIN_CSRF_COOKIE_DOMAIN: "{{ EDXAPP_CROSS_DOMAIN_CSRF_COOKIE_DOMAIN }}"
OPENEDX_CROSS_DOMAIN_CSRF_COOKIE_NAME: "{{ EDXAPP_CROSS_DOMAIN_CSRF_COOKIE_NAME }}"
OPENEDX_CSRF_TRUSTED_ORIGINS: "{{ EDXAPP_CSRF_TRUSTED_ORIGINS }}"

#############################
# Common for LMS and STUDIO #
#############################
openedx_app_common_env_file: &openedx_app_common_env_file_reuse
  SECRET_KEY: "{{ EDXAPP_EDXAPP_SECRET_KEY }}"
  DEFAULT_FILE_STORAGE: "{{ EDXAPP_DEFAULT_FILE_STORAGE }}"
  AWS_ACCESS_KEY_ID: "{{ OPENEDX_AWS_ACCESS_KEY }}"
  AWS_SECRET_ACCESS_KEY: "{{ OPENEDX_AWS_SECRET_ACCESS_KEY }}"
  AWS_QUERYSTRING_AUTH: false
  AWS_STORAGE_BUCKET_NAME: "{{ EDXAPP_AWS_STORAGE_BUCKET_NAME }}"
  AWS_S3_CUSTOM_DOMAIN: "{{ EDXAPP_AWS_S3_CUSTOM_DOMAIN | default('') }}"
  AWS_S3_HOST: "{{ OPENEDX_CUSTOM_S3_HOST }}" # Some code still uses the older s3boto instead of s3boto3
  AWS_S3_ENDPOINT_URL: https://{{ nau_ceph_host }} # for newer s3boto3
  AWS_DEFAULT_ACL: public-read
  XQUEUE_INTERFACE:
    django_auth: null
    url: null
  DATABASES:
    default:
      ENGINE: "django.db.backends.mysql"
      HOST: "{{ openedx_docker_deploy_mysql_default_host }}"
      PORT: "{{ openedx_docker_deploy_mysql_default_port }}"
      NAME: "{{ EDXAPP_MYSQL_DB_NAME }}"
      USER: "{{ EDXAPP_MYSQL_USER }}"
      PASSWORD: "{{ EDXAPP_MYSQL_PASSWORD }}"
      ATOMIC_REQUESTS: true
      OPTIONS:
        init_command: "SET sql_mode='STRICT_TRANS_TABLES'"
    read_replica:
      ENGINE: "django.db.backends.mysql"
      HOST: "{{ openedx_docker_deploy_mysql_read_replica_host }}"
      PORT: "{{ openedx_docker_deploy_mysql_read_replica_port }}"
      NAME: "{{ EDXAPP_MYSQL_DB_NAME }}"
      USER: "{{ EDXAPP_MYSQL_USER }}"
      PASSWORD: "{{ EDXAPP_MYSQL_PASSWORD }}"
      ATOMIC_REQUESTS: true
      OPTIONS:
        init_command: "SET sql_mode='STRICT_TRANS_TABLES'"
    # student_module_history:
    #   ENGINE: django.db.backends.mysql
    #   HOST: mysql_1
    #   PORT: 3306
    #   NAME: "{{ EDXAPP_MYSQL_CSMH_DB_NAME }}"
    #   USER: "{{ EDXAPP_MYSQL_CSMH_USER }}"
    #   PASSWORD: "{{ EDXAPP_MYSQL_CSMH_PASSWORD }}"
      # CONN_MAX_AGE: "{{ EDXAPP_MYSQL_CONN_MAX_AGE }}"
      # OPTIONS: "{{ EDXAPP_MYSQL_CSMH_OPTIONS }}"

  # smtp to send email configuration
  EMAIL_BACKEND: "django.core.mail.backends.smtp.EmailBackend"
  EMAIL_HOST: "{{ OPENEDX_SMTP_HOST }}"
  EMAIL_HOST_PASSWORD: "{{ OPENEDX_SMTP_HOST_PASSWORD }}"
  EMAIL_HOST_USER: "{{ OPENEDX_SMTP_HOST_USER }}"
  EMAIL_PORT: "{{ OPENEDX_SMTP_PORT }}"
  # EMAIL_USE_TLS: "{{ OPENEDX_SMTP_USE_TLS | string }}"
  EMAIL_USE_SSL: "{{ OPENEDX_SMTP_USE_SSL }}"
  
  # Application contact email
  SERVER_EMAIL: "{{ EDXAPP_SERVER_EMAIL }}"
  CONTACT_EMAIL: "{{ EDXAPP_CONTACT_EMAIL }}"
  BUGS_EMAIL: "{{ EDXAPP_CONTACT_EMAIL }}"
  CONTACT_MAILING_ADDRESS: "{{ EDXAPP_CONTACT_EMAIL }}"
  DEFAULT_FEEDBACK_EMAIL: "{{ EDXAPP_CONTACT_EMAIL }}"
  DEFAULT_FROM_EMAIL: "{{ EDXAPP_CONTACT_EMAIL }}"
  FEEDBACK_SUBMISSION_EMAIL: "{{ EDXAPP_CONTACT_EMAIL }}"
  TECH_SUPPORT_EMAIL: "{{ EDXAPP_CONTACT_EMAIL }}"
  UNIVERSITY_EMAIL: "{{ EDXAPP_CONTACT_EMAIL }}"
  PRESS_EMAIL: "{{ EDXAPP_CONTACT_EMAIL }}"
  PAYMENT_SUPPORT_EMAIL: "{{ EDXAPP_CONTACT_EMAIL }}"
  BULK_EMAIL_DEFAULT_FROM_EMAIL: "{{ EDXAPP_BULK_EMAIL_DEFAULT_FROM_EMAIL }}"

  BOOK_URL: ""
  LOG_DIR: "/openedx/data/logs"
  LOGGING_ENV: "sandbox"
  OAUTH_OIDC_ISSUER: "{{ OPENEDX_JWT_COMMON_ISSUER }}"
  PLATFORM_NAME: "{{ EDXAPP_PLATFORM_NAME }}"
  LMS_ROOT_URL: "https://{{ OPENEDX_LMS_HOST }}"
  CMS_ROOT_URL: "https://{{ OPENEDX_CMS_HOST }}"
  CMS_BASE: "{{ OPENEDX_CMS_HOST }}"
  LMS_BASE: "{{ OPENEDX_LMS_HOST }}"
  CELERY_BROKER_TRANSPORT: "{{ OPENEDX_CELERY_BROKER_TRANSPORT }}"
  CELERY_BROKER_HOSTNAME: "{{ OPENEDX_CELERY_BROKER_HOSTNAME }}"
  CELERY_BROKER_VHOST: "{{ OPENEDX_CELERY_BROKER_VHOST }}"
  CELERY_BROKER_USER: "{{ OPENEDX_CELERY_BROKER_USER }}"
  CELERY_BROKER_PASSWORD: "{{ OPENEDX_CELERY_BROKER_PASSWORD }}"
  ENABLE_COMPREHENSIVE_THEMING: true
  COMPREHENSIVE_THEME_DIRS: ["/openedx/themes"]
  COMPREHENSIVE_THEME_LOCALE_PATHS: ["/openedx/themes/nau-basic/conf/locale"]
  DEFAULT_SITE_THEME: "{{ EDXAPP_DEFAULT_SITE_THEME }}"
  STATIC_ROOT_BASE: "/openedx/staticfiles"
  ACE_ROUTING_KEY: "edx.lms.core.default"
  HTTPS: "on"
  LANGUAGE_CODE: "{{ OPENEDX_LANGUAGE_CODE }}"

  # Install richie synchronization package
  ADDL_INSTALLED_APPS:
    - richie_openedx_sync
  # Configure `richie_openedx_sync`
  RICHIE_OPENEDX_SYNC_COURSE_HOOKS: 
    - url: "{{ nau_marketing_site_root }}/api/v1.0/course-runs-sync/"
      secret: "{{ richie_DJANGO_RICHIE_COURSE_RUN_SYNC_SECRETS }}"

  AUTH_PASSWORD_VALIDATORS:
    - NAME: django.contrib.auth.password_validation.UserAttributeSimilarityValidator
    - NAME: common.djangoapps.util.password_policy_validators.MinimumLengthValidator
      OPTIONS:
          min_length: 8
    - NAME: common.djangoapps.util.password_policy_validators.MaximumLengthValidator
      OPTIONS:
          max_length: 75
    - NAME: common.djangoapps.util.password_policy_validators.UppercaseValidator
      OPTIONS:
          min_upper: 1
    - NAME: common.djangoapps.util.password_policy_validators.LowercaseValidator
      OPTIONS:
          min_lower: 1
    - NAME: common.djangoapps.util.password_policy_validators.NumericValidator
      OPTIONS:
          min_numeric: 1
    - NAME: common.djangoapps.util.password_policy_validators.PunctuationValidator
      OPTIONS:
          min_punctuation: 1
  CERTIFICATE_TEMPLATE_LANGUAGES:
      en: English
      pt: Português
  COMMENTS_SERVICE_URL: "http://forum:{{ openedx_forum_port }}" # access directly to forum docker service
  COMMENTS_SERVICE_KEY: "{{ FORUM_API_KEY }}"
  
  # env var ?
  CONTENTSTORE:
    <<: *edxapp_generic_default_contentstore
    ADDITIONAL_OPTIONS: "{{ EDXAPP_CONTENTSTORE_ADDITIONAL_OPTS | default( {} ) }}"
  
  COURSE_CATALOG_API_URL: "{{ OPENEDX_COURSE_CATALOG_API_URL }}"
  COURSE_MODE_DEFAULTS:
    bulk_sku: null
    currency: eur
    description: null
    expiration_datetime: null
    min_price: 0
    name: _('Honor')
    sku: null
    slug: honor
    suggested_prices: ''
  CROSS_DOMAIN_CSRF_COOKIE_DOMAIN: "{{ OPENEDX_CROSS_DOMAIN_CSRF_COOKIE_DOMAIN }}"
  CROSS_DOMAIN_CSRF_COOKIE_NAME: "{{ OPENEDX_CROSS_DOMAIN_CSRF_COOKIE_NAME }}"
  CSRF_TRUSTED_ORIGINS: "{{ OPENEDX_CSRF_TRUSTED_ORIGINS }}"
  DEFAULT_COURSE_LANGUAGE: pt
  ECOMMERCE_API_SIGNING_KEY: "{{ EDXAPP_JWT_SECRET_KEY }}"
  ECOMMERCE_API_URL: "{{ EDXAPP_ECOMMERCE_API_URL }}"
  ECOMMERCE_PUBLIC_URL_ROOT: "{{ EDXAPP_ECOMMERCE_PUBLIC_URL_ROOT }}"
  EDXNOTES_INTERNAL_API: "{{ EDXAPP_EDXNOTES_INTERNAL_API }}" # "http://notes:8000/api/v1"
  EDXNOTES_PUBLIC_API: "{{ EDXAPP_EDXNOTES_PUBLIC_API }}"
  EDX_API_KEY: "{{ EDXAPP_EDX_API_KEY }}"
  ENTERPRISE_API_URL: https://{{ OPENEDX_LMS_HOST }}/enterprise/api/v1
  ENTERPRISE_ENROLLMENT_API_URL: https://{{ OPENEDX_LMS_HOST }}/api/enrollment/v1/
  FACEBOOK_APP_ID: "{{ EDXAPP_FACEBOOK_APP_ID }}"
  FACEBOOK_APP_SECRET: "{{ EDXAPP_FACEBOOK_APP_SECRET }}"
  FEATURES:
    ACCESS_REQUIRE_STAFF_FOR_COURSE: false
    ADVANCED_SECURITY: true
    ALLOW_ALL_ADVANCED_COMPONENTS: true
    # Enable to give course staff unrestricted access to grade downloads;
    # if set to False, only edX superusers can perform the downloads.
    ALLOW_COURSE_STAFF_GRADE_DOWNLOADS: true
    # If True, it adds an option to show/hide the discussions tab.
    ALLOW_HIDING_DISCUSSION_TAB: true
    ALLOW_PUBLIC_ACCOUNT_CREATION: true
    # When a logged in user goes to the homepage ('/') the user will be redirected to the
    # dashboard page when this flag is set to True - this is default Open edX behavior. Set to False to not redirect
    # the user.
    ALWAYS_REDIRECT_HOMEPAGE_TO_DASHBOARD_FOR_AUTHENTICATED_USER: false
    AUDIT_CERT_CUTOFF_DATE: None
    AUTH_USE_CAS: false
    AUTH_USE_CERTIFICATES: false
    AUTH_USE_OPENID: false
    AUTH_USE_OPENID_PROVIDER: false
    AUTH_USE_SHIB: false
    AUTOMATIC_AUTH_FOR_TESTING: false
    CERTIFICATES_ENABLED: true
    # Enable view certificates
    CERTIFICATES_HTML_VIEW: true
    # Enable to allow batch generation of certificates from the instructor dashboard.
    # In case of self-paced courses, the certificate generation button is hidden if certificate
    # generation is not explicitly enabled globally or for the specific course.
    CERTIFICATES_INSTRUCTOR_GENERATION: true
    COURSES_ARE_BROWSEABLE: true
    CUSTOM_CERTIFICATE_TEMPLATES_ENABLED: true
    CUSTOM_COURSES_EDX: true
    DISABLE_LOGIN_BUTTON: false
    DISPLAY_DEBUG_INFO_TO_STAFF: true
    EMBARGO: false
    ENABLE_COMBINED_LOGIN_REGISTRATION: true
    ENABLE_COMBINED_LOGIN_REGISTRATION_FOOTER: true
    ENABLE_COOKIE_CONSENT: false # disable cookie bar
    ENABLE_CORS_HEADERS: true
    ENABLE_COSMETIC_DISPLAY_PRICE: false
    ENABLE_COUNTRY_ACCESS: false
    ENABLE_COURSEWARE_INDEX: true
    ENABLE_LIBRARY_INDEX: true
    ENABLE_COURSEWARE_SEARCH: true
    ENABLE_COURSE_DISCOVERY: true
    ENABLE_CREATOR_GROUP: true
    ENABLE_CREDIT_API: false
    ENABLE_CREDIT_ELIGIBILITY: false
    ENABLE_CROSS_DOMAIN_CSRF_COOKIE: true
    ENABLE_CSMH_EXTENDED: false # if true need `student_module_history` configuration on `DATABASES`
    ENABLE_DASHBOARD_SEARCH: true
    ENABLE_DISABLING_XBLOCK_TYPES: true
    ENABLE_DISCUSSION_EMAIL_DIGEST: false
    ENABLE_DISCUSSION_HOME_PANEL: true
    ENABLE_DISCUSSION_SERVICE: true
    ENABLE_DJANGO_ADMIN_SITE: true
    ENABLE_EDXNOTES: true
    ENABLE_FEEDBACK_SUBMISSION: false
    # Enable grade CSV downloads from the instructor dashboard. Grade
    # calculation started from the instructor dashboard will write grades CSV files to the
    # configured storage backend and give links for downloads.
    ENABLE_GRADE_DOWNLOADS: true
    ENABLE_INSTRUCTOR_ANALYTICS: false
    ENABLE_INSTRUCTOR_BACKGROUND_TASKS: true
    ENABLE_INSTRUCTOR_EMAIL: true
    ENABLE_MANUAL_GIT_RELOAD: false
    ENABLE_MAX_FAILED_LOGIN_ATTEMPTS: true
    ENABLE_MAX_SCORE_CACHE: true
    ENABLE_MKTG_SITE: false
    ENABLE_MOBILE_REST_API: true
    ENABLE_OAUTH2_PROVIDER: true
    ENABLE_ONLOAD_BEACON: false
    ENABLE_OPENBADGES: false
    ENABLE_PAID_COURSE_REGISTRATION: false
    ENABLE_PEARSON_HACK_TEST: false
    ENABLE_PREREQUISITE_COURSES: true
    ENABLE_PUBLISHER: false
    ENABLE_READING_FROM_MULTIPLE_HISTORY_TABLES: true
    ENABLE_RENDER_XBLOCK_API: false
    ENABLE_SPECIAL_EXAMS: true
    ENABLE_STUDENT_HISTORY_VIEW: true
    ENABLE_STUDENT_NOTES: true
    ENABLE_SYSADMIN_DASHBOARD: false
    ENABLE_TEAMS: true
    ENABLE_TEXTBOOK: true
    ENABLE_THIRD_PARTY_AUTH: true
    ENABLE_VIDEO_BEACON: false
    ENABLE_VIDEO_BUMPER: false
    ENABLE_VIDEO_UPLOAD_PIPELINE: false
    ENABLE_XBLOCK_VIEW_ENDPOINT: true
    ENTRANCE_EXAMS: true
    INDIVIDUAL_DUE_DATES: true
    LICENSING: true
    LOG_POSTPAY_CALLBACKS: true
    # Disable instructor dashboard buttons for downloading course data
    # when enrollment exceeds this number. The number indicates the maximum allowed enrollments
    # for the course to be considered "small". Courses exceeding the upper limit of "small"
    # courses will have disabled buttons at the instructor dashboard.
    MAX_ENROLLMENT_INSTR_BUTTONS: 500
    MILESTONES_APP: true
    ORGANIZATIONS_APP: true
    PREVENT_CONCURRENT_LOGINS: false
    PREVIEW_LMS_BASE: "{{ EDXAPP_PREVIEW_LMS_BASE }}"
    REQUIRE_COURSE_EMAIL_AUTH: false
    SHIB_DISABLE_TOS: false
    SHOW_FOOTER_LANGUAGE_SELECTOR: false
    SHOW_HEADER_LANGUAGE_SELECTOR: true
    SHOW_LANGUAGE_SELECTOR: false
    STORE_BILLING_INFO: false
    STUDIO_REQUEST_EMAIL: ''
    USE_DJANGO_PIPELINE: true
    USE_MICROSITES: false
    ENABLE_OTHER_COURSE_SETTINGS: true
    # Maximum number of rows to include in the csv file for downloading problem responses.
    # We've increased to be x10 times the default value.
    MAX_PROBLEM_RESPONSES_COUNT: 50000
    # Enable grade CSV downloads from the instructor dashboard. Grade
    # calculation started from the instructor dashboard will write grades CSV files to the
    # configured storage backend and give links for downloads
    ENABLE_CCX_ANALYTICS_DASHBOARD_URL: True
    # Creating a new course run or content library with an unrecognized org slug will raise an error.
    # This is helpful if you wish to restrict the set of organizations under which course runs and content libraries may be created.
    ORGANIZATIONS_AUTOCREATE: False
    # Activate the plugin to enable update usernames through admin panel in Open edX.
    # And other apps that log into Open edX via OAuth.
    # From MIT Office of Digital Learning
    ENABLE_EDX_USERNAME_CHANGER: True
  FILE_UPLOAD_STORAGE_BUCKET_NAME: "{{ EDXAPP_FILE_UPLOAD_STORAGE_BUCKET_NAME | default(EDXAPP_AWS_STORAGE_BUCKET_NAME) }}"
  GRADES_DOWNLOAD:
    STORAGE_CLASS: "{{ EDXAPP_GRADE_STORAGE_CLASS | default(None) }}"
    STORAGE_KWARGS: "{{ EDXAPP_GRADE_STORAGE_KWARGS | default(None) }}"
    STORAGE_TYPE: "{{ EDXAPP_GRADE_STORAGE_TYPE | default(None) }}"
    BUCKET: "{{ EDXAPP_GRADE_BUCKET | default(None) }}"
    ROOT_PATH: "{{ EDXAPP_GRADE_ROOT_PATH | default(None) }}"
  # HTTPS: 'on'

  # Json Web Tokens configuration
  JWT_ISSUER: "{{ EDXAPP_LMS_ISSUER }}"
  DEFAULT_JWT_ISSUER:
    ISSUER: "{{ OPENEDX_JWT_COMMON_ISSUER }}"
    AUDIENCE: SET-ME-PLEASE
    SECRET_KEY: "{{ EDXAPP_JWT_SECRET_KEY }}"
  JWT_EXPIRATION: 30 # Number of seconds until expiration
  JWT_PRIVATE_SIGNING_KEY: !!null
  JWT_AUTH:
    JWT_ISSUER: "{{ EDXAPP_LMS_ISSUER }}"
    JWT_AUDIENCE: 'SET-ME-PLEASE'
    JWT_SECRET_KEY: "{{ EDXAPP_JWT_SECRET_KEY }}"
    JWT_ISSUERS:
      - ISSUER: "{{ EDXAPP_LMS_ISSUER }}"
        AUDIENCE: 'SET-ME-PLEASE'
        SECRET_KEY: "{{ EDXAPP_JWT_SECRET_KEY }}"
    JWT_PUBLIC_SIGNING_JWK_SET: "{{ EDXAPP_JWT_PUBLIC_SIGNING_JWK_SET|string }}"
    JWT_SIGNING_ALGORITHM: "{{ EDXAPP_JWT_SIGNING_ALGORITHM }}"
    JWT_PRIVATE_SIGNING_JWK: "{{ EDXAPP_JWT_PRIVATE_SIGNING_JWK|string }}"
    JWT_AUTH_COOKIE_HEADER_PAYLOAD: "{{ EDXAPP_JWT_AUTH_COOKIE_HEADER_PAYLOAD }}"
    JWT_AUTH_COOKIE_SIGNATURE: "{{ EDXAPP_JWT_AUTH_COOKIE_SIGNATURE }}"
    JWT_AUTH_REFRESH_COOKIE: "{{ EDXAPP_JWT_AUTH_REFRESH_COOKIE }}"
    
  # Elastic search connection configuration
  #ELASTIC_SEARCH_CONFIG:
  ELASTIC_SEARCH_CONFIG_ES7: "{{ openedx_docker_deploy_elasticsearch_cluster_hosts_url }}"
    # - host: elasticsearch_1
    #   port: 9200
    #   use_ssl: False
    # - host: elasticsearch_2
    #   port: 9200
    #   use_ssl: False
    # - host: elasticsearch_3
    #   port: 9200
    #   use_ssl: False
  
  LANGUAGES: "{{ EDXAPP_LANGUAGES }}"
  LANGUAGE_COOKIE: "{{ EDXAPP_LANGUAGE_COOKIE }}"
  LEARNER_PORTAL_URL_ROOT: "https://learner-portal-{{ EDXAPP_LMS_BASE }}"
  LEARNING_MICROFRONTEND_URL: "{{ EDXAPP_LEARNING_MICROFRONTEND_URL }}"
  LMS_INTERNAL_ROOT_URL: "https://{{ OPENEDX_LMS_HOST }}"
  CORS_ORIGIN_WHITELIST: "{{ EDXAPP_CORS_ORIGIN_WHITELIST }}"
  LOGIN_REDIRECT_WHITELIST: "{{ EDXAPP_LOGIN_REDIRECT_WHITELIST }}"
  MAINTENANCE_BANNER_TEXT: "{{ EDXAPP_MAINTENANCE_BANNER_TEXT }}"
  MKTG_URLS: "{{ EDXAPP_MKTG_URLS }}"
  OAUTH_ENFORCE_SECURE: true
  ORA2_FILE_PREFIX: "{{ EDXAPP_ORA2_FILE_PREFIX }}"
  ORA2_FILEUPLOAD_BACKEND: s3
  PAID_COURSE_REGISTRATION_CURRENCY: "{{ EDXAPP_PAID_COURSE_REGISTRATION_CURRENCY }}"
  PLATFORM_DESCRIPTION: "{{ EDXAPP_PLATFORM_DESCRIPTION }}"
  PLATFORM_FACEBOOK_ACCOUNT: "{{ EDXAPP_PLATFORM_FACEBOOK_ACCOUNT }}"
  PLATFORM_TWITTER_ACCOUNT: "{{ EDXAPP_PLATFORM_TWITTER_ACCOUNT }}"
  PROFILE_IMAGE_BACKEND: "{{ EDXAPP_PROFILE_IMAGE_BACKEND }}"
  PROFILE_IMAGE_HASH_SEED: "{{ EDXAPP_PROFILE_IMAGE_SECRET_KEY }}"
  PROFILE_IMAGE_SECRET_KEY: "{{ EDXAPP_PROFILE_IMAGE_SECRET_KEY }}"
  REGISTRATION_EXTENSION_FORM: "nau_openedx_extensions.custom_registration_form.forms.NauUserExtendedForm"
  REGISTRATION_EXTRA_FIELDS:
    city: "required"
    confirm_email: "hidden"
    country: "required"
    gender: "optional"
    goals: "optional"
    honor_code: "required"
    level_of_education: "optional"
    mailing_address: "hidden"
    year_of_birth: "optional"
    terms_of_service: "hidden"
    data_authorization: "required"
    employment_situation: "optional"
    allow_newsletter: "optional"
    citizen_card: "hidden"
    nif: "hidden"
  REGISTRATION_FIELD_ORDER:
    - email
    - name
    - username
    - password
    - data_authorization
    - honor_code
    - city
    - country
    - allow_newsletter
    - gender
    - year_of_birth
    - level_of_education
    - employment_situation
    - goals
  RETIREMENT_STATES: "{{ EDXAPP_RETIREMENT_STATES }}"

  # Cookies
  SESSION_COOKIE_SECURE: "{{ EDXAPP_SESSION_COOKIE_SECURE }}"
  CSRF_COOKIE_SECURE: true
  SESSION_COOKIE_SAMESITE: "{{ OPENEDX_SESSION_COOKIE_SAMESITE | default('None') }}"
  SESSION_COOKIE_NAME: "{{ EDXAPP_SESSION_COOKIE_NAME }}"
  SESSION_COOKIE_DOMAIN: "{{ EDXAPP_SESSION_COOKIE_DOMAIN }}"
  # This is the domain that is used to set shared cookies between various sub-domains, like logged in and language cookies.
  SHARED_COOKIE_DOMAIN: "{{ OPENEDX_SHARED_COOKIE_DOMAIN | default('') }}"

  # List of logout URIs for each IDA that the learner should be logged out of when they logout of the LMS. Only applies to
  # IDA for which the social auth flow uses DOT (Django OAuth Toolkit).
  IDA_LOGOUT_URI_LIST:
    - "https://{{ EDXAPP_CMS_BASE }}/logout/"
    - "{{ INSIGHTS_BASE_URL }}/logout/"

  SOCIAL_AUTH_OAUTH_SECRETS: "{{ EDXAPP_SOCIAL_AUTH_OAUTH_SECRETS }}"
  SOCIAL_AUTH_TPA_SAML_PIPELINE:
    - common.djangoapps.third_party_auth.pipeline.parse_query_params
    - social_core.pipeline.social_auth.social_details
    - social_core.pipeline.social_auth.social_uid
    - social_core.pipeline.social_auth.auth_allowed
    - social_core.pipeline.social_auth.social_user
    - common.djangoapps.third_party_auth.pipeline.associate_by_email_if_login_api
    - social_core.pipeline.user.get_username
    - common.djangoapps.third_party_auth.pipeline.set_pipeline_timeout
    - common.djangoapps.third_party_auth.pipeline.ensure_user_information
    - social_core.pipeline.user.create_user
    - social_core.pipeline.social_auth.associate_user
    - social_core.pipeline.social_auth.load_extra_data
    - social_core.pipeline.user.user_details
    - common.djangoapps.third_party_auth.pipeline.user_details_force_sync
    - common.djangoapps.third_party_auth.pipeline.set_id_verification_status
    - common.djangoapps.third_party_auth.pipeline.set_logged_in_cookies
    - common.djangoapps.third_party_auth.pipeline.login_analytics
    - nau_openedx_extensions.third_party_auth.pipeline.ensure_cartao_cidadao_data
  SOCIAL_SHARING_SETTINGS: "{{ EDXAPP_SOCIAL_SHARING_SETTINGS }}"
  # Include more allowed fields for the LMS > Course > Instructor > student profile csv
  STUDENT_PROFILE_DOWNLOAD_FIELDS_CUSTOM_STUDENT_ATTRIBUTES:
    - nau_user_extended_model_cc_nic
    - nau_nif
    - nau_user_extended_model_employment_situation
  SUPPORT_SITE_LINK: "{{ EDXAPP_SUPPORT_SITE_LINK }}"
  TIME_ZONE: "{{ EDXAPP_TIME_ZONE }}"
  CELERY_TIMEZONE: "{{ EDXAPP_CELERY_TIMEZONE }}"
  VIDEO_TRANSCRIPTS_SETTINGS: "{{ EDXAPP_VIDEO_TRANSCRIPTS_SETTINGS }}"

  # Django media url configuration
  MEDIA_URL: /media/

  VIDEO_IMAGE_SETTINGS: "{{ EDXAPP_VIDEO_IMAGE_SETTINGS }}"

  DJFS: "{{ EDXAPP_DJFS }}"

  OPEN_EDX_FILTERS_CONFIG: 
    # Also ENABLE_OTHER_COURSE_SETTINGS
    org.openedx.learning.course.enrollment.started.v1:
      fail_silently: False
      pipeline:
        - nau_openedx_extensions.filters.pipeline.FilterEnrollmentByDomain

  # Log exceptions when ignoring exceptions with IGNORE_EXCEPTIONS or DJANGO_REDIS_IGNORE_EXCEPTIONS
  # In reality can't be included because if redis is down, the LMS shows a message to the user
  # that is receiving too much requests.
  # DJANGO_REDIS_LOG_IGNORED_EXCEPTIONS: true

  X_FRAME_OPTIONS: "{{ EDXAPP_X_FRAME_OPTIONS | default('DENY') }}"
  
  # Configure logo used by emails
  LOGO_URL_PNG: "{{ COMMON_LMS_BASE_URL }}/static/nau-basic/images/logo_nau_w220.png"

  # Configure insights
  ANALYTICS_DASHBOARD_URL: "{{ EDXAPP_ANALYTICS_DASHBOARD_URL }}"
  ANALYTICS_DASHBOARD_NAME: "Insights"

  #
  # Change default rate limits
  #
  # On registration form validate each field
  REGISTRATION_VALIDATION_RATELIMIT: 1500/h
  # Create account / registration
  REGISTRATION_RATELIMIT: 150/h
  # Reset password rate limits
  RESET_PASSWORD_TOKEN_VALIDATE_API_RATELIMIT: 30/h
  RESET_PASSWORD_API_RATELIMIT: 30/h

  XBLOCK_SETTINGS:
    ScormXBlock:
      LOCATION: "{{ NAU_SCORM_S3_LOCATION }}"

  # NAU custom configuration for SCORM Xblock that allows to configure a custom storage
  # based on Ceph S3 and that support the multi site feature of the Open edX.
  NAU_SCORM_XBLOCK_STORAGE:
    STORAGE_CLASS: storages.backends.s3boto3.S3Boto3Storage
    STORAGE_KWARGS:
      bucket_name: "{{ NAU_SCORM_S3_BUCKET_NAME }}"
      default_acl: public-read
      querystring_expire: 86400
      endpoint_url: https://{{ nau_ceph_host }}

NAU_SCORM_S3_LOCATION: scorm
NAU_SCORM_S3_BUCKET_NAME: "{{ EDXAPP_AWS_STORAGE_BUCKET_NAME }}"
NAU_SCORM_S3_BUCKET_ENDPOINT: https://{{ nau_ceph_host }}/{{ NAU_SCORM_S3_LOCATION }}/

##################
# LMS
##################
# container lms and lms-worker environment variables
openedx_lms_env_var: "{{ openedx_lms_env_var_default | combine(openedx_lms_env_var_overrides, recursive=True) }}"
openedx_lms_env_var_overrides: {}
openedx_lms_env_var_default:
  SERVICE_VARIANT: lms
  DJANGO_SETTINGS_MODULE: lms.envs.nau_production
  LMS_CFG: /openedx/config/lms.env.yml
  UWSGI_WORKERS: "{{ openedx_lms_uwsgi_workers }}"
  # Use custom timezone
  TZ: "{{ openedx_timezone | default('Europe/Lisbon') }}"

# lms env yaml file
openedx_lms_env_file: "{{ openedx_app_common_env_file | combine(openedx_lms_env_file_default, recursive=True) | combine(openedx_lms_env_file_overrides, recursive=True) }}"
openedx_lms_env_file_overrides: {}
openedx_lms_env_file_default:
  # <<: *openedx_app_common_env_file_reuse
  SITE_NAME: "{{ OPENEDX_SITE_NAME }}"
  ALTERNATE_WORKER_QUEUES: "cms"
  CACHES:
    default:
      KEY_PREFIX: "default"
      VERSION: "1"
      <<: *default_openedx_generic_cache_config
    general:
      KEY_PREFIX: "general"
      <<: *default_openedx_generic_cache_config
    mongo_metadata_inheritance:
      KEY_PREFIX: "mongo_metadata_inheritance"
      TIMEOUT: 300
      <<: *default_openedx_generic_cache_config
    staticfiles:
      KEY_PREFIX: "staticfiles_lms"
      BACKEND: "django.core.cache.backends.locmem.LocMemCache"
      LOCATION: "staticfiles_lms"
    configuration:
      KEY_PREFIX: "configuration"
      <<: *default_openedx_generic_cache_config
    celery:
      KEY_PREFIX: "celery"
      TIMEOUT: "7200"
      <<: *default_openedx_generic_cache_config
    course_structure_cache:
      KEY_PREFIX: "course_structure"
      TIMEOUT: "7200"
      <<: *default_openedx_generic_cache_config
    ora2-storage:
      KEY_PREFIX: "ora2-storage"
      <<: *default_openedx_generic_cache_config
  # MongoDB
  CONTENTSTORE:
    DOC_STORE_CONFIG: "{{ EDXAPP_LMS_SPLIT_DOC_STORE_CONFIG }}"
  DOC_STORE_CONFIG: "{{ EDXAPP_LMS_SPLIT_DOC_STORE_CONFIG }}"
  MODULESTORE:
    default:
        ENGINE: 'xmodule.modulestore.mixed.MixedModuleStore'
        OPTIONS:
          mappings: {}
          stores:
            - NAME: 'split'
              ENGINE: 'xmodule.modulestore.split_mongo.split_draft.DraftVersioningModuleStore'
              DOC_STORE_CONFIG: "{{ EDXAPP_LMS_SPLIT_DOC_STORE_CONFIG }}"
              OPTIONS:
                default_class: 'xmodule.hidden_module.HiddenDescriptor'
                fs_root:  "{{ edxapp_course_data_dir }}"
                render_template: 'common.djangoapps.edxmako.shortcuts.render_to_string'
            - NAME: 'draft'
              ENGINE: 'xmodule.modulestore.mongo.DraftMongoModuleStore'
              DOC_STORE_CONFIG: "{{ EDXAPP_LMS_DRAFT_DOC_STORE_CONFIG }}"
              OPTIONS:
                default_class: 'xmodule.hidden_module.HiddenDescriptor'
                fs_root:  "{{ edxapp_course_data_dir }}"
                render_template: 'common.djangoapps.edxmako.shortcuts.render_to_string'
  
  # Maximum number of students allowed in a CCX (Custom Courses for edX).
  # Increased from the default `200`
  CCX_MAX_STUDENTS_ALLOWED: 500

##################
# CMS / Studio
##################
openedx_cms_env_var: "{{ openedx_cms_env_var_default | combine(openedx_cms_env_var_overrides, recursive=True) }}"
openedx_cms_env_var_overrides: {}
openedx_cms_env_var_default:
  SERVICE_VARIANT: cms
  DJANGO_SETTINGS_MODULE: cms.envs.nau_production
  STUDIO_CFG: /openedx/config/cms.env.yml
  UWSGI_WORKERS: "{{ openedx_cms_uwsgi_workers }}"
  # Use custom timezone
  TZ: "{{ openedx_timezone | default('Europe/Lisbon') }}"

# cms/studio yaml env file
openedx_cms_env_file: "{{ openedx_app_common_env_file | combine(openedx_cms_env_file_default, recursive=True) | combine(openedx_cms_env_file_overrides, recursive=True) }}"
openedx_cms_env_file_overrides: {}
openedx_cms_env_file_default:
  # <<: *openedx_app_common_env_file_reuse
  SITE_NAME: "{{ EDXAPP_CMS_SITE_NAME }}"
  ALTERNATE_WORKER_QUEUES: "lms"
  CACHES:
    default:
      KEY_PREFIX: "default"
      VERSION: "1"
      <<: *default_openedx_generic_cache_config
    general:
      KEY_PREFIX: "general"
      <<: *default_openedx_generic_cache_config
    mongo_metadata_inheritance:
      KEY_PREFIX: "mongo_metadata_inheritance"
      TIMEOUT: 300
      <<: *default_openedx_generic_cache_config
    staticfiles:
      KEY_PREFIX: "staticfiles_cms"
      BACKEND: "django.core.cache.backends.locmem.LocMemCache"
      LOCATION: "staticfiles_cms"
    configuration:
      KEY_PREFIX: "configuration"
      <<: *default_openedx_generic_cache_config
    celery:
      KEY_PREFIX: "celery"
      TIMEOUT: "7200"
      <<: *default_openedx_generic_cache_config
    course_structure_cache:
      KEY_PREFIX: "course_structure"
      TIMEOUT: "7200"
      <<: *default_openedx_generic_cache_config
    ora2-storage:
      KEY_PREFIX: "ora2-storage"
      <<: *default_openedx_generic_cache_config
  # MongoDB
  CONTENTSTORE:
    DOC_STORE_CONFIG: "{{ EDXAPP_CMS_DOC_STORE_CONFIG }}"
  DOC_STORE_CONFIG: "{{ EDXAPP_CMS_DOC_STORE_CONFIG }}"
  MODULESTORE:
    default:
        ENGINE: 'xmodule.modulestore.mixed.MixedModuleStore'
        OPTIONS:
          mappings: {}
          stores:
            - NAME: 'split'
              ENGINE: 'xmodule.modulestore.split_mongo.split_draft.DraftVersioningModuleStore'
              DOC_STORE_CONFIG: "{{ EDXAPP_CMS_DOC_STORE_CONFIG }}"
              OPTIONS:
                default_class: 'xmodule.hidden_module.HiddenDescriptor'
                fs_root:  "{{ edxapp_course_data_dir }}"
                render_template: 'common.djangoapps.edxmako.shortcuts.render_to_string'
            - NAME: 'draft'
              ENGINE: 'xmodule.modulestore.mongo.DraftMongoModuleStore'
              DOC_STORE_CONFIG: "{{ EDXAPP_CMS_DOC_STORE_CONFIG }}"
              OPTIONS:
                default_class: 'xmodule.hidden_module.HiddenDescriptor'
                fs_root:  "{{ edxapp_course_data_dir }}"
                render_template: 'common.djangoapps.edxmako.shortcuts.render_to_string'
  STUDIO_NAME: "{{ EDXAPP_STUDIO_NAME | default('NAU Studio') }}"
  STUDIO_SHORT_NAME: "{{ EDXAPP_STUDIO_SHORT_NAME | default('Studio') }}"
  COURSE_IMPORT_EXPORT_BUCKET: "{{ EDXAPP_IMPORT_EXPORT_BUCKET | default('') }}"
  COURSE_AUTHORING_MICROFRONTEND_URL: "{{ EDXAPP_COURSE_AUTHORING_MICROFRONTEND_URL | default('null') }}"

  SOCIAL_AUTH_EDX_OAUTH2_KEY: "{{ CMS_OAUTH2_KEY_SSO | default('cms-sso') }}"
  SOCIAL_AUTH_EDX_OAUTH2_SECRET: "{{ CMS_OAUTH2_SECRET }}"
  SOCIAL_AUTH_EDX_OAUTH2_URL_ROOT: http://lms:8000
  SOCIAL_AUTH_EDX_OAUTH2_PUBLIC_URL_ROOT: https://{{ OPENEDX_LMS_HOST }}
  SESSION_COOKIE_NAME: studio_session_id

######################################
# Open edx app job
######################################
# To manually run the migrations or other command:
#   docker exec -it $(docker ps --filter "name=openedx_lms\." -q) bash
#   ./manage.py lms migrate --settings nau_production
openedx_app_job_command: bash -c "{{ openedx_app_job_commands | join(' && ') }}"

# merge all commands that need to be executed on app-job container, but remove the empty commands.
openedx_app_job_commands: "{{ openedx_app_job_commands_list | reject('equalto', '') | list }}"

# By default we don't execute anything inside the app-job container.
# If you need to execute one of it, then you need to add this extra variable has true
# when running ansible-playbook executable.
openedx_lms_migrate: false
openedx_cms_migrate: false
openedx_cms_reindex_all_courses: false
openedx_cms_reindex_content_library: false
openedx_cms_reindex_library: false

# The list of commands that need to be executed on app-job container. 
openedx_app_job_commands_list:
  - "{{ 'SERVICE_VARIANT=lms python manage.py lms migrate --settings nau_production' if openedx_lms_migrate else '' }}"
  - "{{ 'SERVICE_VARIANT=cms python manage.py cms migrate --settings nau_production' if openedx_cms_migrate else '' }}"
  - "{{ 'SERVICE_VARIANT=cms python manage.py cms reindex_course --all --settings nau_production' if openedx_cms_reindex_all_courses else '' }}"
# additional reindex tasks
  - "{{ 'SERVICE_VARIANT=cms python manage.py cms reindex_content_library --all --force --settings nau_production' if openedx_cms_reindex_content_library else '' }}"
# this task needs to be run manually, because of the confirmation prompt
  # - "{{ 'SERVICE_VARIANT=cms python manage.py cms reindex_library --all --settings nau_production' if openedx_cms_reindex_library else '' }}"

# run app_job container if there is a command to execute
openedx_app_job: "{{ openedx_app_job_commands|length >0 }}"

# The app-job container environment variables are a merge of both lms and cms environment variables.
openedx_app_env_var:
  STUDIO_CFG: /openedx/config/cms.env.yml
  LMS_CFG: /openedx/config/lms.env.yml
  TZ: "{{ openedx_timezone | default('Europe/Lisbon') }}"
