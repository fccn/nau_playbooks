---

openedx_ecommerce_deploy: true
openedx_ecommerce_job_deploy: false
openedx_ecommerce_docker_image: nauedu/openedx-ecommerce:nau-nutmeg.master
openedx_ecommerce_job_command: bash -c "python manage.py migrate --noinput && python manage.py oscar_populate_countries --initial-only"

openedx_ecommerce_deploy_resources_limit_memory: 500M

openedx_ecommerce_port: 8000

openedx_ecommerce_nginx_ssl_certificate_docker_target: "{{ openedx_nginx_ssl_certificate_docker_target }}"
openedx_ecommerce_nginx_ssl_certificate_key_docker_target: "{{ openedx_nginx_ssl_certificate_key_docker_target }}"

openedx_ecommerce_docker_deploy_files:
  - src: files/ecommerce/nau_production.py
    dest: "{{ openedx_docker_deploy_base_folder }}/ecommerce/nau_production.py"
    service: ecommerce
    config_name: ecommerce_envs_nau_production
    docker_target: /openedx/ecommerce/ecommerce/settings/nau_production.py

openedx_ecommerce_docker_deploy_templates:
  - src_data:  "{{ openedx_ecommerce_cfg_settings | to_nice_yaml(indent=2, width=1337) }}" # default_flow_style=False didn't work
    dest: "{{ openedx_docker_deploy_base_folder }}/ecommerce/ecommerce.yml"
    service: ecommerce
    config_name: ecommerce_cfg_yml
    docker_target: "{{ ECOMMERCE_CFG }}"

openedx_ecommerce_cfg_settings: "{{ openedx_ecommerce_cfg_settings_default | combine(openedx_ecommerce_cfg_settings_overrides, recursive=True) }}"
openedx_ecommerce_cfg_settings_overrides: {}
openedx_ecommerce_cfg_settings_default:
  LANGUAGE_COOKIE_NAME: '{{ ECOMMERCE_LANGUAGE_COOKIE_NAME }}'
  EDX_API_KEY: '{{ ECOMMERCE_EDX_API_KEY }}'
  OSCAR_FROM_EMAIL: '{{ ECOMMERCE_OSCAR_FROM_EMAIL }}'

  ENTERPRISE_SERVICE_URL: '{{ ECOMMERCE_ENTERPRISE_URL }}/enterprise/'
  ENTERPRISE_API_URL: "{{ ECOMMERCE_ENTERPRISE_URL }}/enterprise/api/v1/"
  ECOMMERCE_URL_ROOT: '{{ ECOMMERCE_ECOMMERCE_URL_ROOT }}'

  BACKEND_SERVICE_EDX_OAUTH2_KEY: "{{ ECOMMERCE_BACKEND_SERVICE_EDX_OAUTH2_KEY }}"
  BACKEND_SERVICE_EDX_OAUTH2_PROVIDER_URL: "{{ COMMON_OAUTH_PUBLIC_URL_ROOT }}"
  BACKEND_SERVICE_EDX_OAUTH2_SECRET: "{{ ECOMMERCE_BACKEND_SERVICE_EDX_OAUTH2_SECRET }}"
  BROKER_URL: "{{ ECOMMERCE_BROKER_URL }}"
  # CORS_ORIGIN_WHITELIST:
  # - apps.stage.nau.fccn.pt
  CSRF_COOKIE_SECURE: true
  # CSRF_TRUSTED_ORIGINS:
  # - apps.stage.nau.fccn.pt
  DATABASES: "{{ ECOMMERCE_DATABASES }}"
  EDX_DRF_EXTENSIONS: '{{ ECOMMERCE_EDX_DRF_EXTENSIONS }}'

  EMAIL_BACKEND: django.core.mail.backends.smtp.EmailBackend
  EMAIL_HOST: "{{ OPENEDX_SMTP_HOST }}"
  EMAIL_HOST_PASSWORD: "{{ OPENEDX_SMTP_HOST_PASSWORD }}"
  EMAIL_HOST_USER: "{{ OPENEDX_SMTP_HOST_USER }}"
  EMAIL_PORT: "{{ OPENEDX_SMTP_PORT }}"
  # EMAIL_USE_TLS: "{{ OPENEDX_SMTP_USE_TLS | string }}"
  EMAIL_USE_SSL: "{{ OPENEDX_SMTP_USE_SSL }}"
  JWT_AUTH:
    JWT_AUTH_COOKIE_HEADER_PAYLOAD: "{{ EDXAPP_JWT_AUTH_COOKIE_HEADER_PAYLOAD }}"
    JWT_AUTH_COOKIE_SIGNATURE: "{{ EDXAPP_JWT_AUTH_COOKIE_SIGNATURE }}"
    JWT_AUTH_REFRESH_COOKIE: "{{ EDXAPP_JWT_AUTH_REFRESH_COOKIE }}"
    JWT_ISSUERS:
      - ISSUER: "{{ EDXAPP_LMS_ISSUER }}"
        AUDIENCE: 'SET-ME-PLEASE'
        SECRET_KEY: "{{ EDXAPP_JWT_SECRET_KEY }}"
    JWT_PUBLIC_SIGNING_JWK_SET: "{{ EDXAPP_JWT_PUBLIC_SIGNING_JWK_SET|string }}"
  
  LANGUAGE_CODE: "pt-PT"
  # Change the Django language name of 'Portuguese (Portugal)' to a simpler 'Portuguese'
  LANGUAGES: [
    ['pt-pt', 'PortuguÃªs'],  # Portuguese (Portugal)
    ['en', 'English'],
  ]

  PLATFORM_NAME: "{{ ECOMMERCE_PLATFORM_NAME }}"
  PROTOCOL: https
  SECRET_KEY: "{{ ECOMMERCE_SECRET_KEY }}"
  SOCIAL_AUTH_EDX_OAUTH2_ISSUER: "{{ COMMON_LMS_BASE_URL }}"
  # SOCIAL_AUTH_EDX_OAUTH2_KEY: "{{ ECOMMERCE_SOCIAL_AUTH_EDX_OAUTH2_KEY }}"
  # SOCIAL_AUTH_EDX_OAUTH2_LOGOUT_URL: "{{ COMMON_LMS_BASE_URL }}/logout"
  # SOCIAL_AUTH_EDX_OAUTH2_SECRET: "{{ ECOMMERCE_SOCIAL_AUTH_EDX_OAUTH2_SECRET }}"
  SOCIAL_AUTH_EDX_OAUTH2_URL_ROOT: "{{ COMMON_LMS_BASE_URL }}"
  SOCIAL_AUTH_EDX_OAUTH2_PUBLIC_URL_ROOT: "{{ COMMON_LMS_BASE_URL }}"
  SOCIAL_AUTH_REDIRECT_IS_HTTPS: '{{ ECOMMERCE_SOCIAL_AUTH_REDIRECT_IS_HTTPS }}'

  LOGO_URL: "{{ COMMON_LMS_BASE_URL }}/static/nau-basic/images/nau_azul.svg"
  FAVICON_URL: "{{ COMMON_LMS_BASE_URL }}/static/nau-basic/images/favicon.ico"

  OSCAR_DEFAULT_CURRENCY: "{{ ECOMMERCE_OSCAR_DEFAULT_CURRENCY | default('EUR') }}"

  # Configure the NAU custom extension point on ecommerce.
  # Use different Django Oscar strategy for VAT.
  # NAU_EXTENSION_OSCAR_STRATEGY_CLASS: "nau_extensions.strategy.DefaultStrategy"
  NAU_EXTENSION_OSCAR_RATE_TAX_STRATEGY_CLASS: nau_extensions.strategy.SettingFixedRateTax
  NAU_EXTENSION_TAX_RATE: "0.298701299" # = 0.23/0.77

  ADDL_INSTALLED_APPS:
    - nau_extensions
    - paygate

  DEFAULT_SITE_THEME: "{{ ECOMMERCE_DEFAULT_SITE_THEME | default('nau') }}"
  
  # Add theme locale path, before the default locale path
  LOCALE_PATHS:
    - /openedx/ecommerce/ecommerce/themes/nau/conf/locale
    - /openedx/ecommerce/ecommerce/conf/locale

  PAYMENT_PROCESSOR_CONFIG: '{{ ECOMMERCE_PAYMENT_PROCESSOR_CONFIG }}'
  EXTRA_PAYMENT_PROCESSOR_CLASSES: "{{ ECOMMERCE_EXTRA_PAYMENT_PROCESSOR_CLASSES }}"
  EXTRA_PAYMENT_PROCESSOR_URLS: "{{ ECOMMERCE_EXTRA_PAYMENT_PROCESSOR_URLS }}"
  # NAU_FINANCIAL_MANAGER:
  #   nau: 
  #     url: "http://financial-manager.local.nau.fccn.pt:8000/api/billing/transaction-complete/",
  #     token: "abcdABCD1234",
  NAU_FINANCIAL_MANAGER:
    openedx:
      url: https://{{ financial_manager_nginx_server_name }}/api/billing/transaction-complete/
      receipt-link-url: https://{{ financial_manager_nginx_server_name }}/api/billing/receipt-link/


openedx_ecommerce_docker_environment_variables: "{{ openedx_ecommerce_docker_environment_variables_default }}"
openedx_ecommerce_docker_environment_variables_default:
  DJANGO_SETTINGS_MODULE: ecommerce.settings.nau_production
  ECOMMERCE_CFG: "{{ ECOMMERCE_CFG }}"

ECOMMERCE_CFG: /openedx/config.yml

COMMON_JWT_ISSUER: '{{ COMMON_OAUTH_URL_ROOT }}'
COMMON_OAUTH_URL_ROOT: '{{ COMMON_OAUTH_PUBLIC_URL_ROOT }}'
COMMON_OAUTH_BASE_URL: '{{ COMMON_LMS_BASE_URL }}'
COMMON_OAUTH_PUBLIC_URL_ROOT: '{{ COMMON_OAUTH_BASE_URL }}/oauth2'

ECOMMERCE_EDX_DRF_EXTENSIONS:
  JWT_PAYLOAD_USER_ATTRIBUTE_MAPPING:
    administrator: 'is_staff'
    email: 'email'
    full_name: 'full_name'
    tracking_context: 'tracking_context'
    user_id: 'lms_user_id'
  JWT_PAYLOAD_MERGEABLE_USER_ATTRIBUTES:
    - 'tracking_context'
  OAUTH2_USER_INFO_URL: '{{ COMMON_OAUTH_BASE_URL }}/oauth2/user_info'

ECOMMERCE_EXTRA_PAYMENT_PROCESSOR_CLASSES:
  - paygate.processors.PayGate
ECOMMERCE_EXTRA_PAYMENT_PROCESSOR_URLS: 
  paygate: paygate.urls
  nau_extensions: nau_extensions.urls

ECOMMERCE_ENTERPRISE_URL: '{{ ECOMMERCE_LMS_URL_ROOT }}'

# Celery broker, by default uses redis
ECOMMERCE_BROKER_USERNAME: "{{ openedx_docker_deploy_ecommerce_broker_username | default('') }}"
ECOMMERCE_BROKER_PASSWORD: "{{ openedx_docker_deploy_ecommerce_broker_password | default('') }}"
ECOMMERCE_BROKER_HOST: '{{ openedx_docker_deploy_ecommerce_broker_host }}'
ECOMMERCE_BROKER_PORT: "{{ openedx_docker_deploy_ecommerce_broker_port }}"
ECOMMERCE_BROKER_TRANSPORT: 'redis'
ECOMMERCE_BROKER_DB: 5
ECOMMERCE_BROKER_URL: '{{ ECOMMERCE_BROKER_TRANSPORT }}://{% if ECOMMERCE_BROKER_USERNAME and ECOMMERCE_BROKER_PASSWORD %}{{ ECOMMERCE_BROKER_USERNAME }}:{{ ECOMMERCE_BROKER_PASSWORD }}@{% endif %}{{ ECOMMERCE_BROKER_HOST }}:{{ ECOMMERCE_BROKER_PORT }}/{{ ECOMMERCE_BROKER_DB }}'


# MySQL
ECOMMERCE_DEFAULT_DB_NAME: 'ecommerce'
ECOMMERCE_DATABASE_NAME: '{{ ECOMMERCE_DEFAULT_DB_NAME }}'
ECOMMERCE_DATABASE_USER: 'ecomm001'
ECOMMERCE_DATABASE_HOST: '{{ openedx_docker_deploy_mysql_default_host }}'
ECOMMERCE_DATABASE_PORT: '{{ openedx_docker_deploy_mysql_default_port }}'
ECOMMERCE_DATABASES:
  default:
    ENGINE: django.db.backends.mysql
    NAME: '{{ ECOMMERCE_DATABASE_NAME }}'
    USER: '{{ ECOMMERCE_DATABASE_USER }}'
    PASSWORD: '{{ ECOMMERCE_DATABASE_PASSWORD }}'
    HOST: "{{ ECOMMERCE_DATABASE_HOST }}"
    PORT: "{{ ECOMMERCE_DATABASE_PORT }}"
    ATOMIC_REQUESTS: true
    CONN_MAX_AGE: "{{ ECOMMERCE_DATABASE_CONN_MAX_AGE | default(60) }}"
    OPTIONS:
      connect_timeout: 10
      init_command: "SET sql_mode='STRICT_TRANS_TABLES'"

