---

- name: Generate basic-authentication
  include_role:
    name: basic-authentication
  vars:
    basic_authentication_users: "{{ openedx_nginx_basic_authentication_users }}"
  when: openedx_docker_deploy_run | default(false) and openedx_nginx_basic_authentication_users is defined
  tags:
    - docker_deploy

- name: Install MySQL client for health check
  package:
    name: mysql-client
  when: openedx_docker_deploy_run | default(false)
  tags:
    - docker_deploy

- name: Build web server nginx docker image with static assets
  include_role:
    name: build_web_server_simpler
  vars:
    build_web_server_docker_registry: "{{ openedx_build_web_server_docker_registry }}"
    build_web_server_docker_repository: "{{ openedx_build_web_server_docker_repository }}"
    build_web_server_docker_image: "{{ openedx_build_web_server_docker_image }}"
    build_web_server_docker_tag: "{{ openedx_build_web_server_docker_tag }}"
    build_web_server_services: "{{ openedx_build_web_server_services }}"
    build_web_server_node: "{{ openedx_build_web_server_node }}"
  when: openedx_nginx_build | default(false)
  tags:
    - build_web_server
    - docker_deploy

- name: Deploy
  include_role:
    name: ansible-docker-deploy
  vars:
    docker_deploy_base_folder:         "{{ openedx_docker_deploy_base_folder }}"
    docker_deploy_compose_template:    "{{ openedx_docker_deploy_compose_template }}"
    docker_deploy_templates:           "{{ openedx_docker_deploy_templates | default([]) }}"
    docker_deploy_files:               "{{ openedx_docker_deploy_files | default([]) }}"
    docker_deploy_folders_additional:  "{{ openedx_docker_deploy_folders_additional | default([]) }}"
    docker_deploy_configs:             "{{ openedx_docker_deploy_configs | default([]) }}"
    docker_deploy_secrets:             "{{ openedx_docker_deploy_secrets | default([]) }}"
    docker_deploy_services_additional: "{{ openedx_docker_deploy_services_additional | default([]) }}"
    docker_deploy_shell: true
    docker_deploy_healthcheck_delay :  "{{ openedx_docker_deploy_healthcheck_delay }}"
    docker_deploy_healthcheck_retries: "{{ openedx_docker_deploy_healthcheck_retries }}"
    docker_deploy_s3_files:            "{{ openedx_docker_deploy_s3_files }}"
    docker_deploy_s3_host:             "{{ openedx_docker_deploy_s3_host }}"
    docker_deploy_s3_bucket:           "{{ openedx_docker_deploy_s3_bucket }}"
    docker_deploy_s3_access_key_id:    "{{ openedx_docker_deploy_s3_access_key_id }}"
    docker_deploy_s3_secret_access_key: "{{ openedx_docker_deploy_s3_secret_access_key }}"
  when: openedx_docker_deploy_run | default(false)
  tags:
    - docker_deploy

- name: Run healthcheck
  shell: make healthcheck
  args:
    chdir: "{{ openedx_docker_deploy_base_folder }}"
  delay: "{{ openedx_docker_deploy_healthcheck_delay }}"
  register: result
  until: result.rc == 0
  retries: "{{ openedx_docker_deploy_healthcheck_retries }}"
  # run it only when deploying or when on healthcheck mode.
  when: not ansible_check_mode and (openedx_docker_deploy_run | default(false)) or (healthcheck | default(false))
  changed_when: False
  tags: 
    - healthcheck
    - docker_deploy

- name: Check URLs
  include_role:
    name: nau_check_urls
  vars:
    nau_urls_to_check: "{{ openedx_nau_urls_to_check }}"
  when: (openedx_docker_deploy_run | default(false)) or (healthcheck | default(false))
  tags:
    - docker_deploy
    - nau_check_urls
