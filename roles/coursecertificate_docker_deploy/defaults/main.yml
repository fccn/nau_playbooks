---
coursecertificate_docker_deploy_compose_template: templates/docker-compose.yml.j2
coursecertificate_docker_deploy_base_folder: /nau/ops/coursecertificate
coursecertificate_docker_deploy_compose_name: "{{ coursecertificate_docker_deploy_base_folder | basename }}"

coursecertificate_docker_deploy_templates: "{{ coursecertificate_docker_deploy_templates_default }}"
coursecertificate_docker_deploy_templates_default:
  - src:  "{{ coursecertificate_makefile_template | default('templates/Makefile') }}"
    dest: "{{ coursecertificate_docker_deploy_base_folder }}/Makefile"
  - src: "{{ coursecertificate_nginx_conf_template }}"
    dest: "{{ coursecertificate_docker_deploy_base_folder }}/nginx/nginx.conf"
    docker_target: /etc/nginx/nginx.conf
    config_name: nginx_conf
    service: nginx
  - src: "{{ coursecertificate_app_config_template }}"
    dest: "{{ docker_deploy_base_folder }}/app/config.yml"
    docker_target: /app/config.yml
    config_name: app_config
    service: app

coursecertificate_docker_deploy_files: "{{ coursecertificate_docker_deploy_files_default }}"
coursecertificate_docker_deploy_files_default:
  - src: "{{ coursecertificate_nginx_ssl_certificate_key }}"
    dest: "{{ coursecertificate_docker_deploy_base_folder }}/nginx/ssl/certificate.key.pem"
    docker_target: /etc/ssl/certs/certificate.key.pem
    secret_name: certificate_key
    service: nginx
  - src: "{{ coursecertificate_nginx_ssl_certificate_crt }}"
    dest: "{{ coursecertificate_docker_deploy_base_folder }}/nginx/ssl/certificate.crt.pem"
    docker_target: /etc/ssl/certs/certificate.crt.pem
    secret_name: certificate_crt
    service: nginx
  - src: "{{ coursecertificate_app_sign_pdf_p12 }}"
    dest: "{{ coursecertificate_docker_deploy_base_folder }}/app/sign-pdf.p12"
    docker_target: /app/digital_signature/sign-pdf.p12
    secret_name: sign_pdf_p12
    service: app

# vars to easily override default templates
coursecertificate_nginx_conf_template: templates/nginx.conf
coursecertificate_app_config_template: templates/config.yml

# nginx configurations
coursecertificate_nginx_image: docker.io/nginx:1.22.1
coursecertificate_nginx_http_ingress_port: 23080
coursecertificate_nginx_https_ingress_port: 23443
coursecertificate_nginx_enable_https: true
coursecertificate_nginx_force_https: true
coursecertificate_nginx_hsts_max_age: 31536000
coursecertificate_nginx_admin_access_trusted_ip_cidrs: "{{ NGINX_TRUSTED_IP_CIDRS }}"
coursecertificate_nginx_enable_s3_maintenance: "{{ NGINX_EDXAPP_ENABLE_S3_MAINTENANCE }}"
coursecertificate_nginx_enable_s3_maintenance_file: "{{ NGINX_EDXAPP_S3_MAINTENANCE_FILE }}"
coursecertificate_nginx_enable_s3_maintenance_host: "{{ NGINX_EDXAPP_S3_MAINTENANCE_HOST }}"
coursecertificate_nginx_enable_s3_maintenance_url: "{{ NGINX_EDXAPP_S3_MAINTENANCE_URL }}"
coursecertificate_nginx_proxy_protocol: true
coursecertificate_nginx_http2: true

# app configuration
coursecertificate_app_docker_image: docker.io/nauedu/nau-course-certificate:latest
coursecertificate_app_replicas: 1
coursecertificate_app_lms_server_url: https://{{ EDXAPP_LMS_SITE_NAME }}

coursecertificate_nau_urls_to_check:
  - name: coursecertificate robots.txt
    host: "{{ coursecertificate_server_name }}"
    protocol: https
    page: robots.txt
    content: User-agent
    retries: 5
    port: "{{ coursecertificate_nginx_https_ingress_port }}"
    haproxy_protocol: true
  - name: coursecertificate an image
    host: "{{ coursecertificate_server_name }}"
    protocol: https
    page: static/images/digital_sign/digital_signature_en.png
    port: "{{ coursecertificate_nginx_https_ingress_port }}"
    haproxy_protocol: true

coursecertificate_docker_deploy_healthcheck_retries: 120
coursecertificate_docker_deploy_healthcheck_delay: 60
