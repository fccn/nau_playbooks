---
- name: Install make
  package:
    name: make
    state: present
  tags:
    - docker_deploy

- name: Configure sysctl.conf
  lineinfile: dest=/etc/sysctl.conf line="{{ item.key }} = {{ item.value }}" regexp="^{{ item.key }}[\s]?=" state=present
  with_dict: "{{ elasticsearch_sysctl_conf }}"
  notify: reload sysctl
  tags:
    - docker_deploy

- name: Restart sysctl if necessary
  meta: flush_handlers
  tags:
    - docker_deploy

- name: Deploy
  include_role:
    name: ansible-docker-deploy
  vars:
    docker_deploy_base_folder:         "{{ elasticsearch_docker_deploy_base_folder }}"
    docker_deploy_compose_template:    "{{ elasticsearch_docker_deploy_compose_template }}"
    docker_deploy_templates:           "{{ elasticsearch_docker_deploy_templates | default([]) }}"
    docker_deploy_files:               "{{ elasticsearch_docker_deploy_files | default([]) }}"
    docker_deploy_folders_additional:  "{{ elasticsearch_docker_deploy_folders_additional | default([]) }}"
    docker_deploy_configs:             "{{ elasticsearch_docker_deploy_configs | default([]) }}"
    docker_deploy_secrets:             "{{ elasticsearch_docker_deploy_secrets | default([]) }}"
    docker_deploy_services_additional: "{{ elasticsearch_docker_deploy_services_additional | default([]) }}"
    docker_deploy_shell: true
    docker_deploy_healthcheck_retries: "{{ elasticsearch_docker_deploy_healthcheck_retries }}"
    docker_deploy_healthcheck_delay:   "{{ elasticsearch_docker_deploy_healthcheck_delay }}"
  tags:
    - docker_deploy

- name: Run healthcheck
  shell: make healthcheck
  args:
    chdir: "{{ elasticsearch_docker_deploy_base_folder }}"
  delay: "{{ elasticsearch_docker_deploy_healthcheck_delay }}"
  register: result
  until: result.rc == 0
  retries: "{{ elasticsearch_docker_deploy_healthcheck_retries }}"
  # run it only when deploying or when on healthcheck mode.
  changed_when: False
  when: not ansible_check_mode
  tags: 
    - healthcheck
    - docker_deploy