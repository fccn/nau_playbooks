# {{ ansible_managed }}
worker_processes 1;

events { worker_connections 1024; }

http {

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format compression '$http_x_forwarded_for - $remote_addr - $remote_user [$time_local]  '
        '"$request" $status $body_bytes_sent $request_time '
        '"$http_referer" "$http_user_agent"';

    # Enable gzip compression.
    # Default: off
    gzip on;

    # Compression level (1-9).
    # 5 is a perfect compromise between size and CPU usage, offering about
    # 75% reduction for most ASCII files (almost identical to level 9).
    # Default: 1
    gzip_comp_level    5;

    # Don't compress anything that's already small and unlikely to shrink much
    # if at all (the default is 20 bytes, which is bad as that usually leads to
    # larger files after gzipping).
    # Default: 20
    gzip_min_length    256;

    # Compress data even for clients that are connecting to us via proxies,
    # identified by the "Via" header (required for CloudFront).
    # Default: off
    gzip_proxied       any;

    # Tell proxies to cache both the gzipped and regular version of a resource
    # whenever the client's Accept-Encoding capabilities header varies;
    # Avoids the issue where a non-gzip capable client (which is extremely rare
    # today) would display gibberish if their proxy gave them the gzipped version.
    # Default: off
    gzip_vary          on;

    # Compress all output labeled with one of the following MIME-types.
    # text/html is always compressed by gzip module.
    # Default: text/html
    gzip_types
        application/atom+xml
        application/javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rss+xml
        application/vnd.geo+json
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-web-app-manifest+json
        application/xhtml+xml
        application/xml
        font/opentype
        image/bmp
        image/svg+xml
        image/x-icon
        text/cache-manifest
        text/css
        text/plain
        text/vcard
        text/vnd.rim.location.xloc
        text/vtt
        text/x-component
        text/x-cross-domain-policy;

    # This should be turned on if you are going to have pre-compressed copies (.gz) of
    # static files available. If not it should be left off as it will cause extra I/O
    # for the check. It is best if you enable this in a location{} block for
    # a specific directory, or on an individual server{} level.
    # gzip_static on;

    # Use docker DNS resolver with a limited DNS valid time.
    # This creates something like a discover mechanism.
    # If the application service is redeployed the nginx service would discover this change automatically.
    resolver 127.0.0.11 valid=10s;

    upstream uwsgi {
        server app:5000 fail_timeout=0;
    }

{% if financial_manager_nginx_enable_https %}
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA256:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA:AES256-SHA:AES128-SHA256:AES256-SHA256:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:DES-CBC3-SHA;
    ssl_ecdh_curve X25519:prime256v1:secp521r1:secp384r1;
    keepalive_timeout 300s;
    ssl_session_tickets off;
    ssl_prefer_server_ciphers on;

    # SSL intermediate configuration from https://mozilla.github.io/server-side-tls/ssl-config-generator/
    ssl_certificate /etc/ssl/certs/certificate.crt.pem;
    ssl_certificate_key /etc/ssl/certs/certificate.key.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
{% endif %}

    client_max_body_size 100M;

    # map directly
    root /var/www/html;
    index index.php;

    charset utf-8;

    server {
        server_name {{ financial_manager_nginx_server_name }};

{% if financial_manager_nginx_enable_https %}
        listen [::]:443 ssl{{ ' proxy_protocol' if financial_manager_nginx_proxy_protocol else ''}}{{ ' http2' if ( server.http2 | default(false)) or financial_manager_nginx_http2 else ''}};
        listen 443 ssl{{ ' proxy_protocol' if financial_manager_nginx_proxy_protocol else ''}}{{ ' http2' if ( server.http2 | default(false)) or financial_manager_nginx_http2 else ''}};
{% endif %}
        listen [::]:80{{ ' proxy_protocol' if financial_manager_nginx_proxy_protocol else ''}}{{ ' http2' if ( server.http2 | default(false)) or financial_manager_nginx_http2 else ''}};
        listen 80{{ ' proxy_protocol' if financial_manager_nginx_proxy_protocol else ''}}{{ ' http2' if ( server.http2 | default(false)) or financial_manager_nginx_http2 else ''}};

{% if financial_manager_nginx_enable_https %}
        # request the browser to use SSL for all connections
        add_header Strict-Transport-Security "max-age={{ financial_manager_nginx_hsts_max_age }}; includeSubDomains; preload" always;
{% endif %}
        add_header X-Backend-Server $hostname always;

{% if financial_manager_nginx_proxy_protocol and financial_manager_nginx_admin_access_trusted_ip_cidrs is defined %}
        set_real_ip_from {{ financial_manager_nginx_admin_access_trusted_ip_cidrs }};
        real_ip_header proxy_protocol;
{% endif %}

        access_log /var/log/nginx/access.log compression;

{% if financial_manager_nginx_force_https %}
        # force TLS
        if ($scheme = http) {
            return 301 https://$server_name$request_uri;
        }
{% endif %}

        error_page 502 @maintenance;
        error_page 500 @maintenance;
        error_page 504 @maintenance;

        location @maintenance {
            rewrite  ^(.*) {{ financial_manager_nginx_enable_s3_maintenance_file }} break;
            proxy_http_version     1.1;
            proxy_set_header       Host {{ financial_manager_nginx_enable_s3_maintenance_host }};
            proxy_set_header       Authorization '';
            proxy_hide_header      x-amz-id-2;
            proxy_hide_header      x-amz-request-id;
            proxy_hide_header      Set-Cookie;
            proxy_ignore_headers   "Set-Cookie";
            proxy_buffering        off;
            proxy_intercept_errors on;
            proxy_pass {{ financial_manager_nginx_enable_s3_maintenance_url }};
        }

        open_file_cache          max=2000 inactive=20s;
        open_file_cache_valid    60s;
        open_file_cache_min_uses 5;
        open_file_cache_errors   off;
        
        location @proxy_to_app {
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_redirect off;
            proxy_pass http://app:8000;
        }

{% if financial_manager_admin_access_enable is defined and financial_manager_admin_access_enable %}
{% for loc in financial_manager_admin_access_locations %}
        location ~ ^/{{ loc.path }} {
            {% for cidr in loc.cidrs %}
            allow {{ cidr }};
            {% endfor %}
            deny all;
            try_files $uri @proxy_to_app;
        }

{% endfor %}
{% endif %}

        location ~ ^/static/(?P<file>.*) {
           # access_log off;
           expires 30d;
           add_header Cache-Control public;
           # nginx deliver the file directly, or if not found still proxy to the app.
           root {{ financial_manager_nginx_static_assets_folder }};
           try_files /$file @proxy_app;

           # add_header Access-Control-Allow-Origin {{ financial_manager_nginx_server_name }};
           add_header Access-Control-Allow-Credentials false;
           add_header Access-Control-Allow-Methods GET;
           add_header Access-Control-Allow-Headers 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
        }


        location / {
{% if financial_manager_limit_access_locations | length > 0 %}
            {% for cidr in financial_manager_limit_access_locations %}
            allow {{ cidr }};
            {% endfor %}
            deny all;
{% endif %}
            try_files $uri @proxy_to_app;
        }
    }
}
